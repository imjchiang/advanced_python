# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:

# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed forty, 
# find the sum of the even-valued terms.
import numpy

def even_fib_sum(n, arr=[]):
    if (n <= 1 and arr == []):
        return 0
    elif (n == 2 and arr == []):
        return 1
    elif (n > 2 and arr == []):
        return even_fib_sum(n - 2, [0, 1])
    elif (n <= 0 and arr != []):
        evens = []
        for i in range(len(arr)):
            if (arr[i] % 2 == 0):
                evens.append(arr[i])
        return numpy.sum(evens)
    
    arr.append(arr[-2] + arr[-1])
    return even_fib_sum(n - 1, arr)
        

print(even_fib_sum(13))